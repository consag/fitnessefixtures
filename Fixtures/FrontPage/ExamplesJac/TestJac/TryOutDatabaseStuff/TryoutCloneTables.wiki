---
Test
---
|Comment                                                           |
|DWHD schema         |ST1 stub              |DEV stub              |
|DWHD_DATA(OWNER_DWD)|DWHDDW1STUB(OWNER_DW1)|DWHDDW3STUB(OWNER_DW3)|
|DWHD_IDQ(OWNER_IDQ) |DWHDIDISTUB(OWNER_ID1)|DWHDID3STUB(OWNER_ID3)|
|DWHD_IN(OWNER_STI)  |DWHDSTISTUB(OWNER_SI1)|DWHDST3STUB(OWNER_SI3)|
|DWHD_OUT(OWNER_STO) |DWHDSO1STUB(OWNER_SO1)|DWHDSO3STUB(OWNER_SO3)|
|DWHD_DMC(OWNER_DMC) |DWHDDMISTUB(OWNER_DM1)|DWHDDM3STUB(OWNER_DM3)|
|                    |DWHDDM2STUB(OWNER_DM2)|DWHDDM4STUB(OWNER_DM4)|

!3 Purpose
The fixture should create a database table based on a query the tester supplies. The data can then be used by any other test page.
The counterpart of this fixture is the ..FrontPage.ExamplesJac.TestJac.TryOutDatabaseStuff.CreateTruncateDropTable.DropTable fixture, which drops the specified table.

!3 Prerequisites
- Connections must be defined in connection.properties
- Passwords must be encrypted using encrypt_for_fitnesse.sh

!define targettable {S_STG}
!define targetschema {DB99AYQA}
!define targetdatabase {TESTDA}

!define sourcetable {S_STG}
!define sourceschema {SIEBEL}
!define sourcedatabase {SIEBDA}

|script       |create table     |clonetab                                                                                                                                                       |
|set log level|VERBOSE                                                                                                                                                                          |
|ensure       |creation of table|${targettable}|in database|${targetdatabase}|schema|${targetschema}|as clone of table|${sourcetable}|in database|${sourcedatabase}|schema|${sourceschema}|is|OK|
|check        |error message    |No errors                                                                                                                                                      |

----

!define targettable {BHS_NP}
!define targetschema {OWNER_DW1}
!define targetdatabase {DWHDDW1STUB}

!define sourcetable {BHS_NP}
!define sourceschema {OWNER_DWD}
!define sourcedatabase {DWHD_DATA}

|script       |create table     |clonetab                                                                                                                                                             |
|set log level|VERBOSE                                                                                                                                                                                |
|ensure       |creation of table|${targettable}|in database|${targetdatabase}|schema|${targetschema}|as clone of table|${sourcetable}|in database|${sourcedatabase}|schema|${sourceschema}|is|OK|
|check        |error message    |No errors                                                                                                                                                            |

